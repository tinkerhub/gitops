worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;


events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    server_tokens       off;
    ssl_protocols       TLSv1.2 TLSv1.3;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  tinkerhub.org;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        listen       443 ssl;

        ssl_certificate /etc/letsencrypt/live/tinkerhub.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/tinkerhub.org/privkey.pem;


        # redirect non-https traffic to https
        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

    server {
     server_name alpha.tinkerhub.org;

    listen       443 ssl;

    ssl_certificate /etc/letsencrypt/live/tinkerhub.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tinkerhub.org/privkey.pem;

     location / {
        proxy_pass http://localhost:8000/;
        
       proxy_set_header   Host              $host;
       proxy_set_header   X-Real-IP         $remote_addr;
       proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
       proxy_set_header   X-Forwarded-Proto $scheme;
       proxy_set_header Cookie $http_cookie;

     }
  }
}

